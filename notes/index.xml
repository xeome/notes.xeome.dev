<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Notes on</title><link>https://xeome.github.io/notes/</link><description>Recent content in Notes on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://xeome.github.io/notes/index.xml" rel="self" type="application/rss+xml"/><item><title>Btrfs Maintenance</title><link>https://xeome.github.io/notes/Btrfs-Maintenance/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://xeome.github.io/notes/Btrfs-Maintenance/</guid><description>Links: [[notes/Linux]], [[notes/Post install optimizations]]
Btrfs Maintenance Btrfs scrub Scrubbing reads all data and metadata from devices and verifies checksums. It is not mandatory, but it may detect problems with faulty hardware early because it touches data that may not be in use and causes bit rot.</description></item><item><title>Emulating cortex a72</title><link>https://xeome.github.io/notes/Emulating-cortex-a72/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://xeome.github.io/notes/Emulating-cortex-a72/</guid><description>Links: [[notes/Linux]]
Starting out (Preparing for emulation) Create a Project directory. 1 2 $ mkdir rpi_image $ cd rpi_image Download and decompress the Debian RasPi4 image.</description></item><item><title>JomOS</title><link>https://xeome.github.io/notes/JomOS/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://xeome.github.io/notes/JomOS/</guid><description>Links: [[notes/Linux]], [[notes/Post install optimizations]], [[notes/JomOS Settings]], [[notes/JomOS Optimizations]]
JomOS About JomOS is an aggressively optimized meta Linux distribution designed for people who wants to get most out of their hardware.</description></item><item><title>JomOS Optimizations</title><link>https://xeome.github.io/notes/JomOS-Optimizations/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://xeome.github.io/notes/JomOS-Optimizations/</guid><description>Links: [[notes/Linux]], [[notes/Post install optimizations]], [[notes/JomOS Settings]], [[notes/JomOS]]
JomOS Optimizations Huge repository with packages compiled with x86_64-v3 These are the four x86-64 microarchitecture levels on top of the x86-64 baseline:</description></item><item><title>JomOS Settings</title><link>https://xeome.github.io/notes/JomOS-Settings/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://xeome.github.io/notes/JomOS-Settings/</guid><description>Links: [[notes/Linux]], [[notes/JomOS]], [[notes/JomOS Optimizations]]
JomOS Settings Documentation for configuration tweaks of JomOS
/etc/sysctl.d/99-JomOS-settings.conf vm.swappiness The swappiness sysctl parameter represents the kernel&amp;rsquo;s preference (or avoidance) of swap space.</description></item><item><title>Linux</title><link>https://xeome.github.io/notes/Linux/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://xeome.github.io/notes/Linux/</guid><description>Linux WIP [[notes/JomOS]] [[notes/JomOS Settings]] [[notes/JomOS Optimizations]] [[notes/x86_64-v3 benchmarks]] [[notes/Post install optimizations]] [[notes/XDP-Tutorial]] [[notes/Unevictable LRU Infrastructure]] Done [[notes/Btrfs Maintenance]] [[notes/Zram]] [[notes/Transparent Huge Pages]]</description></item><item><title>Post install optimizations</title><link>https://xeome.github.io/notes/Post-install-optimizations/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://xeome.github.io/notes/Post-install-optimizations/</guid><description>Links: [[notes/Linux]], [[notes/Btrfs Maintenance]], [[notes/JomOS Settings]], [[notes/Zram]]
Post install optimizations Editing mkinitcpio.conf for faster boot times Replace udev with systemd for faster boots and set compression algorithm to zstd and compression level to 2 because compression ratio increase isn&amp;rsquo;t worth the increased boot time.</description></item><item><title>Transparent Huge Pages</title><link>https://xeome.github.io/notes/Transparent-Huge-Pages/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://xeome.github.io/notes/Transparent-Huge-Pages/</guid><description>Links: [[notes/Linux]], [[notes/Post install optimizations]], [[notes/JomOS]]
Transparent Huge Pages When the CPU assigns memory to processes that require it, it typically does so in 4 KB page chunks.</description></item><item><title>Unevictable LRU Infrastructure</title><link>https://xeome.github.io/notes/Unevictable-LRU-Infrastructure/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://xeome.github.io/notes/Unevictable-LRU-Infrastructure/</guid><description>Links: [[notes/Linux]], [[notes/Zram]]
Unevictable LRU Infrastructure A non-NUMA x86 64 platform with 128GB of main memory, for example, will have over 32 million 4k pages in a single zone.</description></item><item><title>x86_64-v3 benchmarks</title><link>https://xeome.github.io/notes/x86_64-v3-benchmarks/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://xeome.github.io/notes/x86_64-v3-benchmarks/</guid><description>Links: [[notes/Linux]], [[notes/Post install optimizations]], [[notes/JomOS]]
x86_64-v3 benchmarks ![[notes/assets/img/benchmarks.png]]
![[notes/assets/img/O3_generic_O3_march_haswell_Comparison.png]]
![[notes/assets/img/O3_generic_O3_march_haswell_Comparison_scimark.png]]
Sources https://lists.archlinux.org/pipermail/arch-general/2021-March/048739.html
https://openbenchmarking.org/result/2103142-HA-UARCHLEVE55&amp;rmm=O1_generic%2CO3_march_nehalem</description></item><item><title>XDP-Tutorial</title><link>https://xeome.github.io/notes/XDP-Tutorial/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://xeome.github.io/notes/XDP-Tutorial/</guid><description>Links: [[notes/Linux]]
XDP-Tutorial Introduction XDP is an upstream Linux kernel component that allows users to install packet processing programs into the kernel.</description></item><item><title>Zram</title><link>https://xeome.github.io/notes/Zram/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://xeome.github.io/notes/Zram/</guid><description>Links: [[notes/Linux]], [[notes/Post install optimizations]], [[notes/JomOS Settings]]
Zram Compression ratio difference Algorithm Cp time Data Compressed Total Ratio lzo 4.</description></item></channel></rss>