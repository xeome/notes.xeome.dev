<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Notes on</title><link>https://xeome.github.io/notes/</link><description>Recent content in Notes on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://xeome.github.io/notes/index.xml" rel="self" type="application/rss+xml"/><item><title>Btrfs Maintenance</title><link>https://xeome.github.io/notes/Btrfs-Maintenance/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://xeome.github.io/notes/Btrfs-Maintenance/</guid><description>Btrfs scrub Scrubbing reads all data and metadata from devices and verifies checksums. It is not mandatory, but it may detect problems with faulty hardware early because it touches data that may not be in use and causes bit rot.</description></item><item><title>Emulating Cortex A72</title><link>https://xeome.github.io/notes/Emulating-Cortex-A72/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://xeome.github.io/notes/Emulating-Cortex-A72/</guid><description>Starting out (Preparing for emulation) Create a Project directory. 1 2 $ mkdir rpi_image $ cd rpi_image Download and decompress the Debian RasPi4 image.</description></item><item><title>JomOS</title><link>https://xeome.github.io/notes/JomOS/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://xeome.github.io/notes/JomOS/</guid><description>About JomOS is an aggressively optimized meta Linux distribution designed for people who wants to get most out of their hardware.</description></item><item><title>JomOS Optimizations</title><link>https://xeome.github.io/notes/JomOS-Optimizations/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://xeome.github.io/notes/JomOS-Optimizations/</guid><description>Optimized repositories JomOS adds optimized repositories automatically to improve performance and system responsiveness. These repositories also include custom kernels with various CPU schedulers and other goodies.</description></item><item><title>Linux</title><link>https://xeome.github.io/notes/Linux/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://xeome.github.io/notes/Linux/</guid><description> [[notes/Btrfs Maintenance]] [[notes/Emulating Cortex A72]] [[notes/JomOS]] [[notes/JomOS Optimizations]] [[notes/Linux Memory Management]] [[notes/Post install optimizations]] [[notes/Recommended Tools]] [[notes/Thorium]] [[notes/Transparent Huge Pages]] [[notes/Trim]] [[notes/VS Code Server]] [[notes/XDP-Tutorial]] [[notes/ZeroTier]] [[notes/Zram]]</description></item><item><title>Linux Memory Management</title><link>https://xeome.github.io/notes/Linux-Memory-Management/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://xeome.github.io/notes/Linux-Memory-Management/</guid><description>Memory Management Concepts Virtual Memory Virtual memory abstracts the details of physical memory from the userspace software. It allows only the information needed to be held in physical memory (paging on demand) and provides a mechanism for the protected and controlled sharing of data between processes.</description></item><item><title>Post install Optimizations</title><link>https://xeome.github.io/notes/Post-install-optimizations/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://xeome.github.io/notes/Post-install-optimizations/</guid><description>Editing mkinitcpio.conf for faster boot times Replace udev with systemd for faster boots and set compression algorithm to zstd and compression level to 2 because compression ratio increase isn&amp;rsquo;t worth the increased boot time.</description></item><item><title>Recommended Tools</title><link>https://xeome.github.io/notes/Recommended-Tools/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://xeome.github.io/notes/Recommended-Tools/</guid><description>These are some of the tools and programs that I recommend and use. I&amp;rsquo;ll keep adding more as I find them.</description></item><item><title>Thorium</title><link>https://xeome.github.io/notes/Thorium/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://xeome.github.io/notes/Thorium/</guid><description>Chromium fork for linux named after radioactive element No. 90 that takes pride in being a highly optimized web browser.</description></item><item><title>Transparent Huge Pages</title><link>https://xeome.github.io/notes/Transparent-Huge-Pages/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://xeome.github.io/notes/Transparent-Huge-Pages/</guid><description>When the CPU assigns memory to processes that require it, it typically does so in 4 KB page chunks. Because the CPU&amp;rsquo;s MMU unit actively needs to translate virtual memory to physical memory upon incoming I/O requests, going through all 4 KB pages is naturally an expensive operation.</description></item><item><title>VS Code Server</title><link>https://xeome.github.io/notes/VS-Code-Server/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://xeome.github.io/notes/VS-Code-Server/</guid><description>Run VS Code on any machine anywhere and access it in the browser.
Compilations, downloads, and other similar tasks should not be done on your primary computer.</description></item><item><title>Why do SSDs need trim</title><link>https://xeome.github.io/notes/Trim/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://xeome.github.io/notes/Trim/</guid><description>How does SSD store data Let&amp;rsquo;s look at the structure of the SSD to understand the problems it faces and why we need TRIM operation to solve them.</description></item><item><title>Writing Documents</title><link>https://xeome.github.io/notes/Writing-Documents/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://xeome.github.io/notes/Writing-Documents/</guid><description>How i write documents on this site Todo</description></item><item><title>XDP-Tutorial</title><link>https://xeome.github.io/notes/XDP-Tutorial/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://xeome.github.io/notes/XDP-Tutorial/</guid><description>Introduction XDP is an upstream Linux kernel component that allows users to install packet processing programs into the kernel. The programs are written in restricted C and compiled into eBPF byte code.</description></item><item><title>ZeroTier</title><link>https://xeome.github.io/notes/ZeroTier/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://xeome.github.io/notes/ZeroTier/</guid><description>ZeroTier is a secure virtual network backbone that allows multiple machines to communicate as if they were all connected to the same network.</description></item><item><title>Zram</title><link>https://xeome.github.io/notes/Zram/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://xeome.github.io/notes/Zram/</guid><description>Compression ratio difference Algorithm Cp time Data Compressed Total Ratio lzo 4.571s 1.1G 387.</description></item></channel></rss>